language: c
sudo: required
dist: focal
matrix:
  include:
  # full testsuite (all tests except for mixed datatype)
  - os: linux
    compiler: gcc
    env: OOT=0 TEST=1 SDE=0 THR="none" CONF="auto" \
      PACKAGES="gcc-8 binutils"
  # mixed-datatype testsuite (gemm_nn only)
  - os: linux
    compiler: gcc
    env: OOT=0 TEST=MD SDE=0 THR="none" CONF="auto" \
      PACKAGES="gcc-8 binutils"
  # salt testsuite (fast set of operations+parameters)
  - os: linux
    compiler: gcc
    env: OOT=0 TEST=SALT SDE=0 THR="none" CONF="auto" \
      PACKAGES="gcc-8 binutils"
  # test x86_64 ukrs with SDE
  - os: linux
    compiler: gcc
    env: OOT=0 TEST=0 SDE=1 THR="none" CONF="x86_64" \
      PACKAGES="gcc-8 binutils"
  # openmp build
  - os: linux
    compiler: gcc
    env: OOT=0 TEST=0 SDE=0 THR="openmp" CONF="auto" \
      PACKAGES="gcc-8 binutils"
  # pthreads build
  - os: linux
    compiler: gcc
    env: OOT=0 TEST=0 SDE=0 THR="pthreads" CONF="auto" \
      PACKAGES="gcc-8 binutils"
  # out-of-tree build
  - os: linux
    compiler: gcc
    env: OOT=1 TEST=0 SDE=0 THR="none" CONF="auto" \
      PACKAGES="gcc-8 binutils"
  # clang build
  - os: linux
    compiler: clang
    env: OOT=0 TEST=0 SDE=0 THR="none" CONF="auto" \
      PACKAGES="clang-8 binutils"
  # macOS with system compiler (clang)
  - os: osx
    compiler: clang
    env: OOT=0 TEST=1 SDE=0 THR="none" CONF="auto" \
      PACKAGES="clang-8 binutils"
  # cortexa15 build and fast testsuite (qemu)
  - os: linux
    compiler: arm-linux-gnueabihf-gcc
    env: OOT=0 TEST=FAST SDE=0 THR="none" CONF="cortexa15" \
      PACKAGES="gcc-arm-linux-gnueabihf libc6-dev-armhf-cross qemu-system-arm qemu-user" \
      TESTSUITE_WRAPPER="qemu-arm -cpu cortex-a15 -L /usr/arm-linux-gnueabihf/"
  # cortexa57 build and fast testsuite (qemu)
  - os: linux
    compiler: aarch64-linux-gnu-gcc
    env: OOT=0 TEST=FAST SDE=0 THR="none" CONF="cortexa57" \
      PACKAGES="gcc-aarch64-linux-gnu libc6-dev-arm64-cross qemu-system-arm qemu-user" \
      TESTSUITE_WRAPPER="qemu-aarch64 -L /usr/aarch64-linux-gnu/"
  # armsve build and fast testsuite (qemu)
  - os: linux
    compiler: aarch64-linux-gnu-gcc-10
    env: OOT=0 TEST=FAST SDE=0 THR="none" CONF="arm64_sve" \
      PACKAGES="gcc-10-aarch64-linux-gnu libc6-dev-arm64-cross qemu-system-arm qemu-user" \
      CFLAGS="-DSVE_NO_NAT_COMPLEX_KERNELS" \
      TESTSUITE_WRAPPER="qemu-aarch64 -L /usr/aarch64-linux-gnu/" \
      BLIS_SVE_KERNEL_IDX_S=2 BLIS_SVE_KERNEL_IDX_D=14
install:
- if [ "$CC" = "clang" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CC="clang-8"; fi
- if [ "$CC" = "gcc"   ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CC="gcc-8"  ; fi
- if [ -n "$PACKAGES" ]; then sudo apt-get install -y $PACKAGES; fi
script:
- export DIST_PATH=.
- if [ $OOT -eq 1 ]; then export DIST_PATH=`pwd`; mkdir ../oot; cd ../oot; chmod -R a-w $DIST_PATH; fi
- $DIST_PATH/configure -t $THR CC=$CC CFLAGS=$CFLAGS $CONF
- $CC --version
- pwd
- env
- ls -l
- make -j 2 V=1
- if [ "$TEST" != "0" ]; then travis_wait 30 $DIST_PATH/travis/do_testsuite.sh; fi
- if [ "$SDE" = "1" ]; then travis_wait 30 $DIST_PATH/travis/do_sde.sh; fi
